var relearn_search_index = [
  {
    "breadcrumb": "Book Notes",
    "content": "Dopamine Nation (10/10) This was a very insightful book. Knowing the balance between pain and pleasure is essential to living in modern day society. Where scarcity is no longer an issue. Our brains are not adapted for a world of abundance. So the forces that kept us alive for thousands of years, are now making us miserable. Consider this a primer into understanding addiction and over consumption. And steps you can take to mitigate this.\nSummary and Highlights Being sick and tired is a result of a skewed pain/pleasure balance. In order to find balance, you must understand the relationship between pleasure and pain in the body. Pleasure and pain operate in the same area of the brain and are intertwined.\nCompulsive consumption leads to pain. And we all can face consumption issues. Even if we have good lives.\nThere are many factors that increase risk for over consumption and addiction. These include:\nBiology Mental illness Trauma Genetics Poverty “Limbic capitalism” is the market force that profits on consumption. This provides access hyper novel and more potent substances and behaviors. More than any time in history.\nEven the internet suggests behaviors that we would have not thought of doing in the first place. Porn and TikTok come to mind. We see crazy behaviors as “Normal” because other people on the internet are doing them.\nThe rush is never as good as you imagine.\nKids these days are growing up in padded environments and not ready for the real world. We have made them afraid of adversity and are encouraging hedonism and escapism.\nWe can’t even put up with minor discomforts like being bored. We are always seeking out novelty and entertainment.\nGo 30 minutes a day with nothing but your thoughts. This will help you become familiar with yourself, others, and the world. You are no longer running from painful thoughts and emotions.\nBoredom can be terrifying. It makes you think about big issues, meaning, and purpose. Boredom is an opportunity. You may discover something new. It gives your mind space to think.\nYou may attribute fatigue and the inability to focus to mental illness. But it could also be from sleep deprivation, over consumption, and over stimulation.\nThe reason we are so miserable is because we are trying so hard not to be miserable.\nWhy too much pleasure leads to pain. Dopamine is a neurotransmitter involved in reward processing. It plays a bigger role in the motivation to get a reward than the pleasure of having the reward.\nThe brains reward pathway includes these parts of the brain:\nVentral tegmental Nucleus accumbens Prefrontal cortex The more/faster dopamine released from a drug or behavior, the more addictive the drug or behavior is.\nPleasure and pain function as a balance in the brain. When one side of the balance is weighted down, the brain compensates by pushing down on the opposite side. Pleasure leads to pain, pain leads to pleasure.\nThe brain wants to maintain homeostasis.\nOpponent process theory states that any prolonged or repeated departures from hedonic or effective neutrality have a cost.\nWith prolonged exposure to pleasure, our capacity to tolerate pain decreases, and our threshold for experiencing pleasure increases.\nThe negative feedback caused by tolerance Repeated exposure to a pleasure stimulus makes the pleasure from that stimulus less and less. And the rebound to the pain side gets stronger and longer. You need more of a behavior or substance over time to feel the same amount of pleasure.\nOver time, your baseline gets set to the side of pain, as your brain tries to counteract bigger and more potent doses of pleasure. See how this bird starts out normal and healthy, then eventually needs it’s drug just to feel normal: https://www.youtube.com/watch?v=HUngLgGRJpo\nPeople who do Opioids for a long time often experience more pain not less. This is referred to as “opioid induced hyperglasia”.\nHeavy and prolonged dopamine leads to a baseline that is dopamine deficient. Hedonism leads to ahedonia.\nUniversal symtoms of withdrawl include:\nAnxiety Irritability Insomnia Dysphoria The pain from withdrawl is what drives people to relapse, withdrawl is the pleasure/pain balance tipping towards the side of pain.\nIf you wait long enough, you can reset your dopamine baseline. (in most cases) And you can regain pleasure in simple things like going for walks, listening to birds, reading, writing, watching the sun rise, etc.\nDopamine cues Cue dependant learning or pavlovian conditioning is when dopamine is released in the brain in response to a conditioned cue. This leads to pleasure in anticipation of a reward. When the cue happens, dopamine drops below baseline, which leads us to seek out the reward.\nDopamine levels below baseline drive craving. The cycle of craving can occur outside of conscious awareness. Dopamine levels raise once we get the reward, but falls below baseline if the reward doesn’t happen.\nLoss chasing: when the uncertainty of getting a reward is as reinforcing as the reward it self. Like gambling or likes on social media.\nThese conditioned reward pathways can cause permanent brain changes. But new pathways can always be forged with dopamine-healthy activities like human connection or exercise.\nEven learning releases dopamine.\nBalance is person independent. Pleasure and pain can happen at the same time like with spicy food. Something that one person finds pleasurable or painful may not be the same for someone else. And not everyone starts with a level balance.\nPeople injured in war are sometimes in less pain because they are pulled into a safer environment when they are being treated.\n“We are Cacti in a rainforest” -Dr. Tom Finucane. Our brains have evolved for a world of scarcity, but we live in a new world of abundance.\nDopamine Fasting We must abstain from the unwanted behavior in order to truly have clarity on how it effects us. High dopamine subtances or behaviors cloud or ability to see cause and effect. And young people are more immune to immediate negative impacts than adults.\nHere are 8 steps to a dopamine fast:\nGet information on the details of your dopamine use. What, when, how often? Find out your personal reason for doing the dopamine inducing behavior. Even seemingly irrational behavior is often rooted in personal logic. What problems is the drug or behavior causing? Short term? Long term? Go for a set period without the drug or behavior. Use mindfulness to observe your thoughts, emotions, and physical sensations as separate from yourself. Abstaining gives new insight to the behaviors. Decide if you will continue using in a controlled way. Or go completely without. Experiment to find out what works and what doesn’t. “I’m sick and tired of being sick and tired”\nDo you want to be doing this 10 years from now? How about 5? 1? 6 months from now? You may as well try to stop now. Consider your current behaviors for your future self.\nYou must go without the drug or behavior in order to reset your dopamine baseline and to truly see the cause and effect between substance use and how you feel.\nYou can’t replace one drug with another because you will still be weighing down the pleasure side of the balance. And something less potent won’t feel like a reward because your baseline for pleasure is too high.\nIf you don’t feel better after a dopamine fast then you may have some other underlying medical problem. But you will feel worse before you feel better. Withdrawl can last anywhere from 2 weeks to 2 months or longer.\nUse mindfulness to observe without judging yourself. Have compassion for yourself. The thoughts and emotions you have been running from will come crashing down on you during withdrawl. Instead of running, tolerate it.\nDon’t forget that moderation can backfire.\nLimit access through self-binding. Self-binding is placing barriers between you and the reward to help get over the limitations of willpower. Willpower gets tired the more we use it. This is a tool, not a fail safe.\nYou do self binding while your will is strong. Not when the cue, routine, reward cycle has already started and your willpower goes down.\nMake it harder to access the reward.\nThis can be through physical barriers or distance. Such as a ksafe or weight loss surgeries. It can also be based on time limits and finish lines. Such as setting a time of day to use or a reward for accomplishing something.\n“Forgive yourself, you have problems like everyone else.”\nTrack your usage to become more aware. Overall awareness will help mitigate consumption.\nDelay discounting is when high dopamine messes with our ability to delay gratification. “Temporal horizons” shrink when we are under the spell of a drug. You become governed by the pleasure-pain balance, instead of by reason. You can no longer objectively evaluate immediate rewards vs their long term counterparts.\nIf you don’t take control now, you may be doing this forever.\nThe opposite is also true, immediate rewards activate emotion and reward parts of the brain. When you delay rewards, you activate the prefrontal cortex. Which is involved in planning and abstract thinking.\nCategorical self binding is avoiding anything that could entertain your addict mind. Like how scrolling instagram can lead to seeking out porn. Sort dopamine into categories. Ones that you will allow yourself to consume, and ones you do not. This helps avoid triggers that lead to craving.\nThis is useful for substances that we can’t eliminate all together but want to have a healthier relationship with like food, sex, smartphones, etc.\nThis can fail if you accidentally include a triggering behavior in your list of acceptable behaviors.\nYou can also transform an object into a symbol of restraint. Such as putting a single beer on display to remind you of what you are doing.\nRather than feeling restrained by this new way of living, you will feel liberated.\nIntimacy from drugs doesn’t last.\nThere are drugs may help with addictions, but have the potential to become addictive themselves. Perscription stimulants like adderal are the molecular equivalent to meth. They cause huge spikes of dopamine and have high high potential for abuse.\nThese drugs could also potentially make things worse in the long run and have unintended consequences.\nADHD drug treatment is associated with deterioration in academic and social-emotional functioning.\nAntidepressants may lead to tolerance and dependence and make depression worse in the long run (tardive dysphoria).\nInstead of feeling better than well, these drugs may make us feel other than well. And can limit our ability to experience the full range of emotions needed for a balanced life.\nWe may be making large portions of the population indifferent to intolerable circumstances. Corporations and governments have the potential to use drugs as a form of social control.\nThere are as many as 10,000 toddlers receiving stimulants like ritalin.\nWhen you are numb to everything, you lose your hunger for anything. Medications can be lifesaving, but there are other tools than can help.\nWhy you should lean on pain We feel great after a cold shower. The first seconds are painful, tell yourself this is temporary.\nJames bond shower: Start with a normal shower, then end it cold for at least a minute.\nDopamine and norepinephrine levels rise 250 and 530% above baseline respectively. And remain elevated hours after. And have been shown to raise serotonin and neuronal growth.\nPressing on the pain side of the balance can lead to pleasure. The dopamine that results is indirect and potentially longer lasting. Just like how the body restores balance by leaning toward pain after a pleasure stimuli, the body will restore balance towards pleasure from a painful stimuli.\n“With intermittent exposure to pain, our natural hedonic set point gets weighted to the side of pleasure, such that we become less vulnerable to pain and more able to feel pleasure over time.” -pg 145 Dopamine Nation\nSocrates on the relationship between pain and pleasure:\n“How strange would appear to be this thing that men call pleasure! And how curiously it is related to what is thought to be its opposite, pain! The two will never be found together in a man, and yet if you seek the one and obtain it, you are almost bound always to get the other as well, just as though they were both attached to one and the same head. . . . Wherever the one is found, the other follows up behind. So, in my case, since I had pain in my leg as a result of the fetters, pleasure seems to have come to follow it up.” -pg 147 Dopamine Nation\nHormesis Using pain to treat pain has been around forever.\nHormesis is the study of using small doses of “pain” to trigger the body’s adaptive processes. (Cold, heat, gravitational changes, radiation, food restriction, exercise, etc.) These adaptive processes improve tolerance and functionality of the system to harder challenges.\nIntermittent fasting in animals increased life span, reduced blood pressure, and improved Heart Rate Variability.\n“Exercise is immediately toxic to cells, leading to increased temperatures, noxious oxidants, and oxygen and glucose deprivation. Yet the evidence is overwhelming that exercise is health-promoting, and the absence of exercise, especially combined with chronic sedentary feeding—eating too much all day long—is deadly.”\nExercise increases many of the neurotransmitters involved in positive mood regulation: dopamine, serotonin, norepinephrine, epinephrine, endocannabinoids, and endogenous opioid peptides (endorphins). Exercise contributes to the birth of new neurons and supporting glial cells. Exercise even reduces the likelihood of using and getting addicted to drugs.\" -pg 150 Dopamine Nation\nDopamine and movement are deeply connected. Do obtain what we desire, we need to go get it. Do drugs just remind us that we have bodies?\nExercise is more beneficial to positive mood, sleep, cognition than any pill. Even a 30 minute walk is beneficial. Just remember that pleasure comes AFTER pain.\nThe extreme side of pain can cause it’s own addiction. So be careful. Too much pain can deplete dopamine, causing overconsumption. So just slightly lean into pain. Build progress over time.\nTruth telling Telling the truth is another “pain leads to pleasure”. You can trick yourself when you are lying. So you are inhibiting self-awareness as well when you tell the truth. Writing in a journal is a good way to master yourself with truth telling.\nDenial is caused by the disconnect between our reward pathway and higher brain regions. (Prefrontal cortex)\nPrefrontal coretex is involved in planning, storytelling, decision making, emotional regulation, etc.\nTelling the truth activates the prefrontal cortex and strengthens it through repeated use.\nAwareness What behavior or habit do you want to change? Why? And what would you be giving up if you stopped that behavior? What is one step you can take to change the behavior?\nHonesty makes connections with other humans We assume people will abandon us when we expose our vulnerabilities. But they really assure other people of their own doubts, fears, and weaknesses.\nHuman connection increases Oxytocin. Oxytocin binds to dopamine-secreting neurons and enhances the reward circuit tract. Human connection replaces addiction.\nConsuming leads to isolation. Because you replace the reward you get from Human connections with artificial rewards.\nHuman connection can be exploited as an addiction as well. When it is used for selfish gratifications rather than through shared humanity. Like when people are Grandstanding and manipulating.\nDo not share stories about your addictions to show off. Only share them to teach lessons. Tell accurate stories about yourself. Do not play the victim. Take responsibility. Accurate stories help you make accurate decisions.\nWrite down your character defects and ways those hurt your relationships.\nSocial media has led us to creating false self’s about what our lives are really like. If we don’t feel real, we isolate and become depersonalized.\nHonesty tethers ourselves to reality and makes us feel real in the world.\nGetting control of your addictions can lead others to do the same.\nKeep your promises to children. The children benefit and are better able to regulate their emotions.\nPeople will feel more confident around you because they can trust you.\nProsocial Shame Destructive shame is when the group condemns or shuns when someone makes a mistake. Over consumption leads to shame, which leads to lying, which leads to isolation, which continues the circle to over consumption.\nProsocial shame is when the group holds us closer and provides steps to redemption. It says that shame is useful for thriving communities. We all have our flaws and need forgiveness. Instead of leading to lying, it leads to truth telling and acceptance and breaks the cycle of addiction.\nIf we are open and honest to our children about our mistakes and struggles, children will be more open and honest with us about theirs. Admit when we have been wrong.\nWe feel deeply connected to others when we feel accepted despite our flaws.\nSocial media makes us compare ourselves to the entire world. Leading us to believe we should have done more.\nImmerse ourselves in the world instead of turning away from it.\nFinding balance does not happen instantly. It requires patience, courage, and maintenance. You must have faith that the small actions you take every day will pay off in the future.\nIf you made it this far… Please consider giving me some feedback. I want to become a better writer and help others grow along with me. Feedback is invaluable for this goal.\nThanks for reading!",
    "description": "Dopamine Nation (10/10) This was a very insightful book. Knowing the balance between pain and pleasure is essential to living in modern day society. Where scarcity is no longer an issue. Our brains are not adapted for a world of abundance. So the forces that kept us alive for thousands of years, are now making us miserable. Consider this a primer into understanding addiction and over consumption. And steps you can take to mitigate this.",
    "tags": [],
    "title": "Dopamine Nation",
    "uri": "/booknotes/dopamine-nation/"
  },
  {
    "breadcrumb": "",
    "content": "RHCSA Stuff RHCSA Notes RHCSA Study Tracker Redhat Exam Environment How to Study for RHCSA RHCSA Study Points RHCSA Vagrant Lab Setup Fedora My Fedora Setup Misc Using Man Pages wsl2 [[XBare Metal to Proxmox VM]] [[Creating a Bootable and Persistent Fedora 40 USB Drive From Fedora 40]] Labs Turn a file into a block device ",
    "description": "RHCSA Stuff RHCSA Notes RHCSA Study Tracker Redhat Exam Environment How to Study for RHCSA RHCSA Study Points RHCSA Vagrant Lab Setup Fedora My Fedora Setup Misc Using Man Pages wsl2 [[XBare Metal to Proxmox VM]] [[Creating a Bootable and Persistent Fedora 40 USB Drive From Fedora 40]] Labs Turn a file into a block device ",
    "tags": [],
    "title": "Linux",
    "uri": "/linux/"
  },
  {
    "breadcrumb": "",
    "content": "Articles How to Study for CCNA 200-301 resources_for_passing_ccna things_to_learn_after_ccna The formatting and images of all of my networking notes go destroyed when migrating away from OneNote. But they still come in handy all of the time.\nSee my networking notes:\nCisco ccnp_devnet_sandbox_setup cisco_vlan_lab cli cml_setup_in_vmware device_management_protocols dhcp_config dhcp_snooping_and_arp_inspection ethernet_lans extended_acls ip_services ipv6 ipv6_addressing_and_subnetting ipv6_config ipv6_routing l2-etherchannel lan_architecture management nat ospf_concepts ospf_config ospf_lab ospf_network_types_and_neighbors qos router_operation routing_in_the_lan rstp securing_network_devices security_architectures spanning_tree spanning_tree_protocol_concepts standard_acls static_routes switch_interfaces switchport_security_config t-shoot_routing tcp_ip_basic tcp_ip_transport_and_applications vlans wan_architecture wans_and_ip_routing what_is_a_vlan_ wireless wireless_architectures wireless_lan wireless_security Juniper cisco_to_junos_cheat_sheet consoling_in_to_mx80_from_linux juniper_cli_basics junos_fundementals junos_paste_config toggle_poe ",
    "description": "Articles How to Study for CCNA 200-301 resources_for_passing_ccna things_to_learn_after_ccna The formatting and images of all of my networking notes go destroyed when migrating away from OneNote. But they still come in handy all of the time.\nSee my networking notes:\nCisco ccnp_devnet_sandbox_setup cisco_vlan_lab cli cml_setup_in_vmware device_management_protocols dhcp_config dhcp_snooping_and_arp_inspection ethernet_lans extended_acls ip_services ipv6 ipv6_addressing_and_subnetting ipv6_config ipv6_routing l2-etherchannel lan_architecture management nat ospf_concepts ospf_config ospf_lab ospf_network_types_and_neighbors qos router_operation routing_in_the_lan rstp securing_network_devices security_architectures spanning_tree spanning_tree_protocol_concepts standard_acls static_routes switch_interfaces switchport_security_config t-shoot_routing tcp_ip_basic tcp_ip_transport_and_applications vlans wan_architecture wans_and_ip_routing what_is_a_vlan_ wireless wireless_architectures wireless_lan wireless_security Juniper cisco_to_junos_cheat_sheet consoling_in_to_mx80_from_linux juniper_cli_basics junos_fundementals junos_paste_config toggle_poe ",
    "tags": [],
    "title": "Networking",
    "uri": "/networking/"
  },
  {
    "breadcrumb": "",
    "content": "Containers Calibre Web with Docker and NGINX distrobox Using Vagrant on Linux Website Apache How to Build a website With Hugo githubpageshugo How to Set Up Hugo Relearn Theme SCSSandSASSinhugo Add Plausible to Hugo Site Obsidian Free Obsidian sync Building a Dashboard How to use Templates How to use the dataview plugin YAML In Obsidian image_to_text Tracker Plugin Setup Git gitguide Vim vimguide Vim mode in bash Misc Calibre_Server emailserver iphonemigrate Setting Up a Self-hosted NextCloud Server pandoc Process-bookfusion-highlights proxmox_setup rsync Serial-in-on-linux Silverblue tmuxbook VS_Codium LEGO_BRICK_LABELS-CONTACT_SHEET Upcoming Projects: Searx Create my own searx search engine\ngo to https://searx.space/\nRSS Create and RSS feed of my site and subscribe to other feeds.\nFollow these sites:\nhttps://denshi.org/ https://drewdevault.com/ https://opensourcemusings.com/support https://www.mrmoneymustache.com/\nDWM Tile Manager http://thedarnedestthing.com/vim/wiki%20cheatsheet\n[[../Security/firefox_hardening]]\nBrowser Sync https://www.xbrowsersync.org/\nPrivacy tools https://www.privacytools.io/",
    "description": "Containers Calibre Web with Docker and NGINX distrobox Using Vagrant on Linux Website Apache How to Build a website With Hugo githubpageshugo How to Set Up Hugo Relearn Theme SCSSandSASSinhugo Add Plausible to Hugo Site Obsidian Free Obsidian sync Building a Dashboard How to use Templates How to use the dataview plugin YAML In Obsidian image_to_text Tracker Plugin Setup Git gitguide Vim vimguide Vim mode in bash Misc Calibre_Server emailserver iphonemigrate Setting Up a Self-hosted NextCloud Server pandoc Process-bookfusion-highlights proxmox_setup rsync Serial-in-on-linux Silverblue tmuxbook VS_Codium LEGO_BRICK_LABELS-CONTACT_SHEET Upcoming Projects: Searx Create my own searx search engine",
    "tags": [],
    "title": "Tools",
    "uri": "/tools/"
  },
  {
    "breadcrumb": "",
    "content": "I wanted a category to share what I learn about writing. So i can improve my writing skills and become a better thinker and better at helping others.\nThings I Learned from Dickie Bush and Nicolas Cole’s Writing Email Course ",
    "description": "I wanted a category to share what I learn about writing. So i can improve my writing skills and become a better thinker and better at helping others.\nThings I Learned from Dickie Bush and Nicolas Cole’s Writing Email Course ",
    "tags": [],
    "title": "Writing",
    "uri": "/writing/"
  },
  {
    "breadcrumb": "",
    "content": " Creamy Jalepeno Sauce Easy Mango Salsa Quinoa Bowl Vegan Tofu Quesadilla Tempeh Bacon ",
    "description": " Creamy Jalepeno Sauce Easy Mango Salsa Quinoa Bowl Vegan Tofu Quesadilla Tempeh Bacon ",
    "tags": [],
    "title": "Recipes",
    "uri": "/recipes/"
  },
  {
    "breadcrumb": "Writing",
    "content": "The cycle of caffeine addiction can be vicious. Just like any other drug.\nThe cycle goes like this:\nCaffeine causes a variety of pains and withdrawal symptoms. \u003e You use caffeine to relieve these pains and withdrawal symptoms. \u003e Caffeine causes pains and withdrawal symptoms.\nUnless you can break this pattern. You will be trapped in this cycle forever. How do you break the cycle?\nHere are 4 options for breaking the cycle. Along with the benefits and drawbacks for each.\n1. Cold turkey - dealing with the pains and withdrawal symptoms. (Suck it up!) This options requires mental toughness and discipline. If you take this path. You are fed up with caffeine and are all in on quitting. You may have had an event that pushed you over the edge. You’ve had enough.\nYou may also realize that trying to wean off may be harder because you are feeding the addiction cycle.\nYou are immediately stepping out of the cycle. This is the fastest way to quit. But many relapse when the pressure is too great to continue.\n2. Tapering - slowly lower your dose so that the cycle fades away without noticing. (Easy does it!) This option lets you continue to live a normal life. If you have to function at work or at home (or both), this may be a good option. You pick a time frame. Whether it be a few days, or 6 months. Pick an option that you think you can stick with.\nThis option may, however, lead to “serial tapering”.\nThis is where you do a good job weaning for a week or a few days or whatever. But then, due to normal life circumstances, you have a stressful day, a short deadline, a bad night of sleep, or a combo of many different things. And you default to solving this problem with caffeine.\nYour dose ends up being reset to where you started, or worse, higher.\n3. Replacing routines - finding other ways to resolve the pain. (Now we are talking!) In the book “Atomic Habits”, the author explains the cycle of cue, craving, routine, reward. The cue is the thing that triggers the craving, which leads to performing a routine, which is what gets you the reward. For caffeine, this could look like:\nCue = You are tired, but you need to get stuff done at work.\nCraving = You start to crave caffeine.\nRoutine = You take caffeine.\nReward = You feel “Energy” and get your work done.\nWith replacement theory, you replace the routine, to get the exact same reward.\nCue = You are tired, but you need to get stuff done at work.\nCraving = You crave caffeine.\nRoutine = You go on a run.\nReward = You feel “Energy” and get your work done.\nThe trick is, finding a routine to replace caffeine can be difficult. Because there are actually so many factors in the cue to begin with.\nIn my experience, a caffeine-cycle withdrawal cue looks more like this:\nCue = You have anxiety, are slightly down, have brain fog, you feel pressure to get work done, or chores, dealing with back pain, lack motivation, etc.\nCraving = You crave caffeine.\nRoutine = You take caffeine.\nReward = All of the cues, which are just a myriad of withdrawal symptoms, paired with normal life stress, are temporarily resolved.\nWhich leads me to the best option..\n4. A combination of all three (Super Saiyan!) How can you combine cold turkey AND tapering? Well, by definition you can’t. But if you merge the two, you dramatically shorten the time frame of your taper. I believe this could give you some serious momentum. Let’s break down this combo, as well as adding routine replacement:\nMeet in the middle of cold turkey and tapering to do a short, two week taper.\nFind new replacements for all of your cues.\nDuring your two week taper, write down a list of all of your cues. Then write 2-3 ideas on how to solve them.\nHere are some examples:\nCue New Routine Tired Jog, exercise, drink water Bored Pursue a new hobby or skill, read, go on a walk Feeling Down Journal, exercise, watch a inspiring video Achy Joints Stretch, mobility work, massage Anxiety Meditate, Journal, Talk to friends Hungry Drink water, Fill up with fruits and veggies, exercise Stressed Meditate, work on solving problems, support group These may be different for you. But the point is, relentless pursuit of actually solving your problems, and living a fulfilling life. Instead of masking issues with caffeine.\nI think this option is the best bang for your buck. As you are not negating the impact that withdrawal has on your life, but still dealing with any underlying problems you may face when fully caffeine free.\nNotes on the half life of caffeine. The average half life of caffeine is 5 hours. This means, if you consume 500 mg of caffeine, in 5 hours you will still have 250mg of caffeine in your system. 5 hours after that, you will have 125mg. Screw it, i’ll make a chart:\nHour Caffeine in your body (mg) 0 500 5 250 10 125 15 62.5 20 31.2 25 15.6 30 7.8 35 3.9 40 1.9 The half life of drugs can be misleading. Just because the half life is 5 hours, doesn’t mean that the drug will be clear in 10 hours. As you can see, a single dose of caffeine can technically still be in your system more than 40 hours later. And that’s just accounting for the average half life.\nThe high end can be up to 9.5 hours. This means, it can take more than 72 hours for caffeine to fully leave your system after a single dose.\nBut wait, there’s more..\nEach subsequent dose adds to the amount of caffeine in your blood system. You are likely going to start some form of mild withdrawals at the 24 hour mark. And most of us have a daily caffeine habit. This means at 24 hours, if you take another 500mg of caffeine, your new starting point is 515mg.\nIf you take caffeine daily, you ALWAYS have caffeine in your system.\nI don’t want to do anymore math, but as you can see, your caffeine levels will drop more rapidly the higher the dose. So your tapering, in theory, could get faster without feeling the same withdrawals from lowering a higher dose.\nKeep that in mind.",
    "description": "The cycle of caffeine addiction can be vicious. Just like any other drug.\nThe cycle goes like this:\nCaffeine causes a variety of pains and withdrawal symptoms. \u003e You use caffeine to relieve these pains and withdrawal symptoms. \u003e Caffeine causes pains and withdrawal symptoms.\nUnless you can break this pattern. You will be trapped in this cycle forever. How do you break the cycle?\nHere are 4 options for breaking the cycle. Along with the benefits and drawbacks for each.",
    "tags": [],
    "title": "4 Ways to Quit Caffeine",
    "uri": "/writing/4-ways-to-quit-caffeine/"
  },
  {
    "breadcrumb": "Tools",
    "content": "I couldn’t find a guide on how to set up Calibre web step-by-step as a Docker container. Especially not one that used Nginx as a reverse proxy.\nThe good news is that it is really fast and simple. You’ll need a few tools to get this done:\nA server with a public IP address A DNS Provider (I use CloudFlare) Docker Nginx A Calibre Library Certbot Rsync First, sync your local Calibre library to a folder on your server:\nrsync -avuP your-library-dir root@example.org:/opt/calibre/Install Docker sudo apt update sudo apt install docker.ioCreate a Docker network\nsudo docker network create calibre_networkCreate a Docker volume to store Calibre Web data\nsudo docker volume create calibre_dataPull the Calibre Web Docker image\nsudo docker pull linuxserver/calibre-webStart the Calibre Web Docker container\nsudo docker run -d \\ --name=calibre-web \\ --restart=unless-stopped \\ -p 8083:8083 \\ -e PUID=$(id -u) \\ -e PGID=$(id -g) \\ -v calibre_data:/config \\ -v /opt/calibre/Calibre:/books \\ --network calibre_network \\ linuxserver/calibre-webConfigure Nginx to act as a reverse proxy for Calibre Web Create the site file\nsudo vim /etc/nginx/sites-available/calibre-webAdd the following to the file\nserver { listen 80; server_name example.com; # Replace with your domain or server IP location / { proxy_pass http://localhost:8083; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; } }Enable the site\nsudo ln -s /etc/nginx/sites-available/calibre-web /etc/nginx/sites-enabled/Restart Nginx\nsudo service nginx restartDNS CNAME Record Make sure to set up a cname record for your site with your DNS provider such as: calibre.example.com\nSSL Certificate Install ssl cert using certbot\ncertbot --nginxSite Setup Head to the site at https://calibre.example.com and log in with default credentials:\nusername: admin password: admin123\nSelect /books as the library directory. Go into admin settings and change your password.\nAdding new books Whenever you add new books to your server via the rsync command from earlier, you will need to restart the Calibre Web Docker container. Then restart Nginx.\nsudo docker restart calibre-web systemctl restart nginxThat’s all there is to it. Feel free to reach out if you have issues.",
    "description": "I couldn’t find a guide on how to set up Calibre web step-by-step as a Docker container. Especially not one that used Nginx as a reverse proxy.\nThe good news is that it is really fast and simple. You’ll need a few tools to get this done:\nA server with a public IP address A DNS Provider (I use CloudFlare) Docker Nginx A Calibre Library Certbot Rsync First, sync your local Calibre library to a folder on your server:",
    "tags": [],
    "title": "Calibre Web with Docker and NGINX",
    "uri": "/tools/calibre-web-with-docker-and-nginx/"
  },
  {
    "breadcrumb": "",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Categories",
    "uri": "/categories/"
  },
  {
    "breadcrumb": "Recipes",
    "content": "Creamy Jalepeno Sauce 1 cup vegan mayo 1 tsp onion powder 1 tsp garlic powder 1 tsp smoked paprika 1 tsp chipotle powder 2 tbps pickled jalepeno brine 8 slices pickled jelepenos finely diced Can add citric acid or lime juice for more zip 2-4 tablespoons vegan sour cream Blend ingredients and add to sauce bottle.",
    "description": "Creamy Jalepeno Sauce 1 cup vegan mayo 1 tsp onion powder 1 tsp garlic powder 1 tsp smoked paprika 1 tsp chipotle powder 2 tbps pickled jalepeno brine 8 slices pickled jelepenos finely diced Can add citric acid or lime juice for more zip 2-4 tablespoons vegan sour cream Blend ingredients and add to sauce bottle.",
    "tags": [],
    "title": "Creamy Jalepeno Sauce",
    "uri": "/recipes/creamy-jalepeno-sauce/"
  },
  {
    "breadcrumb": "Recipes",
    "content": " Ingredients Quinoa Mango Salsa Guacamole Micro greens Black Beans Creamy Jalepeno Sauce ",
    "description": " Ingredients Quinoa Mango Salsa Guacamole Micro greens Black Beans Creamy Jalepeno Sauce ",
    "tags": [],
    "title": "Easy Mango Salsa Quinoa Bowl",
    "uri": "/recipes/easy-mango-salsa-quinoa-bowl/"
  },
  {
    "breadcrumb": "Tools",
    "content": "Word Press is great, but it is probably a lot more bloated then you need for a personal website. Enter Hugo, it has less server capacity and storage needs than Word Press. Hugo is a static site generator than takes markdown files and converts them to html.\nHosting your own website is also a lot cheaper than having a provider like Bluehost do it for you. Instead of $15 per month, I am currently paying $10 per year.\nThis guide will walk through building a website step-by-step.\nSetting up a Virtual Private Server (VPS) Registering a domain name Pointing the domain to your server Setting up hugo on your local PC Syncing your Hugo generate site with your server Using nginx to serve your site Enable http over SSL Setting up a Virtual Private Server (VPS) I use Vultr as my VPS. When I signed up they had a $250 credit towards a new account. If you select the cheapest server (you shouldn’t need anything else for a basic site) that comes out to about $6 a month. Of course the $250 credit goes towards that which equates to around 41 months free.\nHead to vultr.com. Create and account and Select the Cloud Compute option.\nUnder CPU \u0026 Storage Technology, select “Regular Performance”. Then under “Server Location, select the server closest to you. Or closest to where you think your main audience will be.\nUnder Server image, select the OS you are most comfortable with. This guide uses Debian.\nUnder Server Size, slect the 10GB SSD. Do not select the “IPv6 ONLY” option. Leave the other options as default and enter your server hostname.\nOn the products page, click your new server. You can find your server credentials and IPv4 address here. You will need these to log in to your server.\nLog into your sever via ssh to test. From a Linux terminal run:\nssh username@serveripaddressThen, enter your password when prompted.\nRegistering a Domain Name I got my domain perfectdarkmode.com from Cloudflare.com for about $10 per year. You can check to see available domains there. You can also check https://www.namecheckr.com/ to see iof that name is available on various social media sites.\nIn CloudFlare, just click “add a site” and pick a domain that works for you. Next, you will need your server address from earlier.\nUnder domain Registration, click “Manage Domains”, click “manage” on your domain. One the sidebar to the right, there is a qucik actions menu. Click “update DNS configuration”.\nClick “Add record”. Type is an “A” record. Enter the name and the ip address that you used earlier for your server. Uncheck “Proxy Status” and save.\nYou can check to see if your DNS has updated on various DNS severs at https://dnschecker.org/. Once those are up to date (after a couple minutes) you should be able to ping your new domain.\n[davidthomas@fedora posts]$ ping perfectdarkmode.com PING perfectdarkmode.com (104.238.140.131) 56(84) bytes of data. 64 bytes from 104.238.140.131.vultrusercontent.com (104.238.140.131): icmp_seq=1 ttl=53 time=33.2 ms 64 bytes from 104.238.140.131.vultrusercontent.com (104.238.140.131): icmp_seq=2 ttl=53 time=28.2 ms 64 bytes from 104.238.140.131.vultrusercontent.com (104.238.140.131): icmp_seq=3 ttl=53 time=31.0 msNow, you can use the same ssh command to ssh into your vultr serverusing your domain name.\nssh username@domain.comSetting up hugo on your local PC Hugo is a popular open-source static site generator. It allows you to take markdown files, and builds them into and html website. To start go to https://gohugo.io/installation/ and download Hugo on your local computer. (I will show you how to upload the site to your server later.)\nPick a theme The theme I use is here https://themes.gohugo.io/themes/hugo-theme-hello-friend-ng/\nYou can browse your own themes as well. Just make sure to follow the installation instructions. Let’s create a new Hugo site. Change into the directory where you want your site to be located in. Mine rests in ~/Documents/.\ncd ~/Documents/Create your new Hugo site.\nhugo new site site-nameThis will make a new folder with your site name in the ~/Documents directory. This folder will have a few directories and a config file in it.\narchetypes config.toml content data layouts public resources static themesFor this tutorial, we will be working with the config.toml file and the content, public, static, and themes. Next, load the theme into your site directory. For the Hello Friend NG theme:\ngit clone https://github.com/rhazdon/hugo-theme-hello-friend-ng.git themes/hello-friend-ngNow we will load the example site into our working site. Say yes to overwrite.\ncp -a themes/hello-friend-ng/exampleSite/* .The top of your new config.toml site now contains:\nbaseURL = \"https://example.com\" title = \"Hello Friend NG\" languageCode = \"en-us\" theme = \"hello-friend-ng\"Replace your baseURL with your site name and give your site a title. Set the enableGlobalLanguageMenu option to false if you want to remove the language swithcer option at the top. I also set enableThemeToggle to true so users could set the theme to dark or light.\nYou can also fill in the links to your social handles. Comment out any lines you don’t want with a “#” like so:\n[params.social](params.social) name = \"twitter\" url = \"https://twitter.com/\" [params.social](params.social) name = \"email\" url = \"mailto:nobody@example.com\" [params.social](params.social) name = \"github\" url = \"https://github.com/\" [params.social](params.social) name = \"linkedin\" url = \"https://www.linkedin.com/\" # [params.social](params.social) # name = \"stackoverflow\" # url = \"https://www.stackoverflow.com/\"You may also want to edit the footer text to your liking. I commented out the second line that comes with the example site:\n[params.footer] trademark = true rss = true copyright = true author = true topText = [] bottomText = [ # \"Powered by \u003ca href=\\\"http://gohugo.io\\\"\u003eHugo\u003c/a\u003e\", # \"Made with \u0026#10084; by \u003ca href=\\\"https://github.com/rhazdon\\\"\u003eDjordje Atlialp\u003c/a\u003e\" ]Now, move the contents of the example contents folder over to your site’s contents folder (giggidy):\ncp -r ~/Documents/hugo/themes/hello-friend-ng/exampleSite/content/* ~/Documents/hugo/content/Let’s clean up a little bit. Cd into ~/Documents/hugo/content/posts. Rename the file to the name of your first post. Also, delete all of the other files here:\ncd ~/Documents/hugo/contents/posts mv goisforlovers.md newpostnamehere.md find . ! -name 'newpostnamehere.md' -type f -exec rm -f {} +Open the new post file and delete everything after this:\n+++ title = \"Building a Minimalist Website with Hugo\" description = \"\" type = [\"posts\",\"post\"] tags = [ \"hugo\", \"nginx\", \"ssl\", \"http\", \"vultr\", ] date = \"2023-03-26\" categories = [ \"tools\", \"linux\", ] series = [\"tools\"] [ author ] name = \"David Thomas\" +++You will need to fill out this header information for each new post you make. This will allow you to give your site a title, tags, date, categories, etc. This is what is called a TOML header. TOML stands for Tom’s Obvious Minimal Language. Which is a minimal language used for parsing data. Hugo uses TOML to fill out your site.\nSave your doc and exit. Next, there should be an about.md page now in your ~/Documents/hugo/Contents folder. Edit this to edit your about page for your site. You can use this Markdown Guide if you need help learning markdown language. https://www.markdownguide.org/\nServe your website locally Let’s test the website by serving it locally and accessing it at localhost:1313 in your web browser. Enter the command:\nhugo serveHugo will now be generating your website. You can view it by entering localhost:1313 in your webbrowser.\nYou can use this to test new changes before uploading them to your server. When you svae a post or page file such as your about page, hugo will automatically update the changes to this local page if the local server is running.\nPress “Ctrl + c” to stop this local server. This is only for testing and does not need to be running to make your site work.\nBuild out your public directory Okay, your website is working locally, how do we get it to your server to host it online? We are almost there. First, we will use the hugo command to build opur website in the public folder. Then, we will make a copy of our public folder on our server using rsync. I will also show you how to create an alias so you do not have to remember the rsync command every time.\nFrom your hugo site folder run:\n[davidthomas@fedora hugo]$ hugo Start building sites … hugo v0.98.0+extended linux/amd64 BuildDate=unknownNote: To insert an image into your post. Add the image to your ~/Documents/hugo/static directory. Then reference the image in your post like this: | EN -------------------+----- Pages | 30 Paginator pages | 0 Non-page files | 0 Static files | 16 Processed images | 0 Aliases | 15 Sitemaps | 1 Cleaned | 0 Total in 65 msNext, we will put your public hugo folder into /var/www/ on your server. Here is how to do that with an alias. Open ~/.bashrc.\nvim ~/.bashrcAdd the following line to the end of the file, making sure to replace the username and server name:\n# My custom aliases alias rsyncp='rsync -rtvzP ~/Documents/hugo/public/ username@myserver.com:/var/www/public'Save and exit the file. Then tell bash to update it’s source config file.\nsource ~/.bashrcNow your can run the command by just using the new alias any time. Your will need to do this every time you update your site locally.\nrsyncpSet up nginx on your server Install nginx\napt update apt upgrade apt install nginxcreate an nginx config file in /etc/nginx/sites-available/\nvim /etc/nginx/sites-available/publicYou will need to add the following to the file, update the options, then save and exit:\nserver { listen 80 ; listen [::]:80 ; server_name example.org ; root /var/www/mysite ; index index.html index.htm index.nginx-debian.html ; location / { try_files $uri $uri/ =404 ; } }Enter your domain in “server_name” line in place of “example.org”. Also, point “root” to your new site file from earlier. (/var/www/public). Then save and exit.\nLink this site-available config file to sites-enabled to enable it. Then restart nginx:\nln -s /etc/nginx/sites-available/public /etc/nginx/sites-enabled systemctl reload nginxAccess Permissions We will need to make sure nginx has permissions to your site folder so that it can access them to serve your site. Run:\nchmod 777 /var/www/publicFirewall Permissions You will need to make sure your firewall allows port 80 and 443. Vultr installs the ufw program by default. But your can install it if you used a different provider. Beware, enabling a firewalll could block you from accessing your vm, so do your research before tinkering outside of these instructions.\nufw allow 80 ufw allow 443Nginx Security We will want to hide your nginx version number on error pages. This will make your site a bit harder for hackers to find exploits. Open your Nginx config file at /etc/nginx/nginx.conf and remove the “#” before “server_tokens off;”\nEnter your domain into your browser. Congrats! You now have a running website!\nUse Certbot to enable HTTPS Right now, our site uses the unencrypted http. We want it to use the encrypted version HTTPS (HTTP over SSL). This will increase user privacy, hide usernames and passwords used on your site, and you get the lock symbol by your URL name instead of “!not secure”.\nInstall Certbot and It’s Nginx Module apt install python3-certbot-nginxRun certbot certbot --nginxFill out the information, certbot asks for your emaill so it can send you a reminder when the certs need to be renewed every 3 months. You do not need to consent to giving your email to the EFF. Press 1 to select your domain. And 2 too redirect all connections to HTTPS.\nCertbot will build out some information in your site’s config file. Refresh your site. You should see your new fancy lock icon.\nSet Up a Cronjob to automatically Renew certbot certs crontab -eSelect a text editor and add this line to the end of the file. Then save and exit the file:\n0 0 1 * * certbot --nginx renewYou now have a running website. Just make new posts locally, the run “hugo” to rebuild the site. And use the rsync alias to update the folder on your server. I will soon be making tutorials on making an email address for your domain, such as david@perfectdarkmode.com on my site. I will also be adding a comments section, RSS feed, email subscription, sidebar, and more.\nFeel free to reach out with any questions if you get stuck. This is meant to be an all encompassing guide. So I want it to work.\nExtras Optimizing images Create assets folder in main directory.\nCreate images folder in /assets\nAccess image using hugo pipes\n{{ $image := resources.Get \"images/test-image.jpg\" }} \u003cimg src=\"{{ ( $image.Resize \"500x\" ).RelPermalink }}\" /\u003ehttps://gohugo.io/content-management/image-processing/",
    "description": "Word Press is great, but it is probably a lot more bloated then you need for a personal website. Enter Hugo, it has less server capacity and storage needs than Word Press. Hugo is a static site generator than takes markdown files and converts them to html.\nHosting your own website is also a lot cheaper than having a provider like Bluehost do it for you. Instead of $15 per month, I am currently paying $10 per year.",
    "tags": [],
    "title": "How to Build a website With Hugo",
    "uri": "/tools/how-to-build-a-website-with-hugo/"
  },
  {
    "breadcrumb": "Tools",
    "content": "Hugo Setup Adding a module as a theme Make sure Go is installed\ngo versionCreate a new site\nhugo new site sitename cd sitenameInitialize your site as a module\nhugo mod init sitenameConfirm\ncat go.modAdd the module as a dependency using it’s git link\nhugo mod get github.com/McShelby/hugo-theme-relearnConfirm\ncat go.modadd the theme to config.toml\n# add this line to config.toml and save theme = [\"github.com/McShelby/hugo-theme-relearn\"]Confirm by viewing site\nhugo serve # visit browser at http://localhost:1313/ to view siteAdding a new “chapter” page\nhugo new --kind chapter Chapter/_index.mdAdd a home page\nhugo new --kind home _index.mdAdd a default page\nhugo new \u003cchapter\u003e/\u003cname\u003e/_index.mdor\nhugo new \u003cchapter\u003e/\u003cname\u003e.mdYou will need to change some options in _index.md\n+++ # is this a \"chaper\"? chapter=true archetype = \"chapter\" # page title name title = \"Linux\" # The \"chapter\" number weight = 1 +++Adding a “content page” under a category\nhugo new basics/first-content.mdCreate a sub directory:\nhugo new basics/second-content/_index.md change draft = true to draft = false in the content page to make a page render. Global site parameters Add these to your config.toml file and edit as you please\n[params] # This controls whether submenus will be expanded (true), or collapsed (false) in the # menu; if no setting is given, the first menu level is set to false, all others to true; # this can be overridden in the pages frontmatter alwaysopen = true # Prefix URL to edit current page. Will display an \"Edit\" button on top right hand corner of every page. # Useful to give opportunity to people to create merge request for your doc. # See the config.toml file from this documentation site to have an example. editURL = \"\" # Author of the site, will be used in meta information author = \"\" # Description of the site, will be used in meta information description = \"\" # Shows a checkmark for visited pages on the menu showVisitedLinks = false # Disable search function. It will hide search bar disableSearch = false # Disable search in hidden pages, otherwise they will be shown in search box disableSearchHiddenPages = false # Disables hidden pages from showing up in the sitemap and on Google (et all), otherwise they may be indexed by search engines disableSeoHiddenPages = false # Disables hidden pages from showing up on the tags page although the tag term will be displayed even if all pages are hidden disableTagHiddenPages = false # Javascript and CSS cache are automatically busted when new version of site is generated. # Set this to true to disable this behavior (some proxies don't handle well this optimization) disableAssetsBusting = false # Set this to true if you want to disable generation for generator version meta tags of hugo and the theme; # don't forget to also set Hugo's disableHugoGeneratorInject=true, otherwise it will generate a meta tag into your home page disableGeneratorVersion = false # Set this to true to disable copy-to-clipboard button for inline code. disableInlineCopyToClipBoard = false # A title for shortcuts in menu is set by default. Set this to true to disable it. disableShortcutsTitle = false # If set to false, a Home button will appear below the search bar on the menu. # It is redirecting to the landing page of the current language if specified. (Default is \"/\") disableLandingPageButton = true # When using mulitlingual website, disable the switch language button. disableLanguageSwitchingButton = false # Hide breadcrumbs in the header and only show the current page title disableBreadcrumb = true # If set to true, hide table of contents menu in the header of all pages disableToc = false # If set to false, load the MathJax module on every page regardless if a MathJax shortcode is present disableMathJax = false # Specifies the remote location of the MathJax js customMathJaxURL = \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\" # Initialization parameter for MathJax, see MathJax documentation mathJaxInitialize = \"{}\" # If set to false, load the Mermaid module on every page regardless if a Mermaid shortcode or Mermaid codefence is present disableMermaid = false # Specifies the remote location of the Mermaid js customMermaidURL = \"https://unpkg.com/mermaid/dist/mermaid.min.js\" # Initialization parameter for Mermaid, see Mermaid documentation mermaidInitialize = \"{ \\\"theme\\\": \\\"default\\\" }\" # If set to false, load the Swagger module on every page regardless if a Swagger shortcode is present disableSwagger = false # Specifies the remote location of the RapiDoc js customSwaggerURL = \"https://unpkg.com/rapidoc/dist/rapidoc-min.js\" # Initialization parameter for Swagger, see RapiDoc documentation swaggerInitialize = \"{ \\\"theme\\\": \\\"light\\\" }\" # Hide Next and Previous page buttons normally displayed full height beside content disableNextPrev = true # Order sections in menu by \"weight\" or \"title\". Default to \"weight\"; # this can be overridden in the pages frontmatter ordersectionsby = \"weight\" # Change default color scheme with a variant one. Eg. can be \"auto\", \"red\", \"blue\", \"green\" or an array like [ \"blue\", \"green\" ]. themeVariant = \"auto\" # Change the title separator. Default to \"::\". titleSeparator = \"-\" # If set to true, the menu in the sidebar will be displayed in a collapsible tree view. Although the functionality works with old browsers (IE11), the display of the expander icons is limited to modern browsers collapsibleMenu = false # If a single page can contain content in multiple languages, add those here additionalContentLanguage = [ \"en\" ] # If set to true, no index.html will be appended to prettyURLs; this will cause pages not # to be servable from the file system disableExplicitIndexURLs = false # For external links you can define how they are opened in your browser; this setting will only be applied to the content area but not the shortcut menu externalLinkTarget = \"_blank\"Syntax highlighting Supports a variety of [Code Syntaxes] To select the syntax, wrap the code in backticks and place the syntax by the first set of backticks.\n```bash echo hello \\```Adding tags Tags are displayed in order at the top of the page. They will also display using the menu shortcut made further down.\nAdd tags to a page:\n+++ tags = [\"tutorial\", \"theme\"] title = \"Theme tutorial\" weight = 15 +++Choose a default color theme Add to config.toml with the chosen theme for the “style” option:\n[markup] [markup.highlight] # if `guessSyntax = true`, there will be no unstyled code even if no language # was given BUT Mermaid and Math codefences will not work anymore! So this is a # mandatory setting for your site if you want to use Mermaid or Math codefences guessSyntax = false # choose a color theme or create your own style = \"base16-snazzy\"Add Print option and search output page. add the following to config.toml\n[outputs] home = [\"HTML\", \"RSS\", \"PRINT\", \"SEARCH\"] section = [\"HTML\", \"RSS\", \"PRINT\"] page = [\"HTML\", \"RSS\", \"PRINT\"]Customization This theme has a bunch of editable customizations called partials. You can overwrite the default partials by putting new ones in /layouts/partials/.\nto customize “partials”, create a “partials” directory under site/layouts/\ncd layouts mkdir partials cd partialsYou can find all of the partials available for this theme here\nChange the site logo using the logo.html partial Create logo.html in /layouts/partials\nvim logo.htmlAdd the content you want in html. This can be an img html tag referencing an image in the static folder. Or even basic text. Here is the basic syntax of an html page, adding “Perfect Dark Mode” as the text to display:\n\u003c!DOCTYPE html\u003e \u003chtml\u003e \u003cbody\u003e \u003ch3\u003ePerfect Dark Mode\u003c/h3\u003e \u003c/body\u003e \u003c/html\u003eAdd a favicon to your site This is pasted from the relearn site. Add Favicon and edit * If your favicon is a SVG, PNG or ICO, just drop off your image in your local static/images/ folder and name it favicon.svg, favicon.png or favicon.ico respectively. If no favicon file is found, the theme will lookup the alternative filename logo in the same location and will repeat the search for the list of supported file types.\nIf you need to change this default behavior, create a new file in layouts/partials/ named favicon.html. Then write something like this:\n\u003clink rel=\"icon\" href=\"/images/favicon.bmp\" type=\"image/bmp\"\u003eChanging theme colors In your config.toml file edit the themeVariant option under [params]\nthemeVariant = \"relearn-dark\"There are some options to choose from or you can custom make your theme colors by using this stylesheet generator\nMenu Shortcuts Add a [[menu.shortcuts]] entry for each link\n[[menu.shortcuts]] name = \"\u003ci class='fab fa-fw fa-github'\u003e\u003c/i\u003e GitHub repo\" identifier = \"ds\" url = \"https://github.com/McShelby/hugo-theme-relearn\" weight = 10 [[menu.shortcuts]] name = \"\u003ci class='fas fa-fw fa-camera'\u003e\u003c/i\u003e Showcases\" url = \"more/showcase/\" weight = 11 [[menu.shortcuts]] name = \"\u003ci class='fas fa-fw fa-bookmark'\u003e\u003c/i\u003e Hugo Documentation\" identifier = \"hugodoc\" url = \"https://gohugo.io/\" weight = 20 [[menu.shortcuts]] name = \"\u003ci class='fas fa-fw fa-bullhorn'\u003e\u003c/i\u003e Credits\" url = \"more/credits/\" weight = 30 [[menu.shortcuts]] name = \"\u003ci class='fas fa-fw fa-tags'\u003e\u003c/i\u003e Tags\" url = \"tags/\" weight = 40",
    "description": "Hugo Setup Adding a module as a theme Make sure Go is installed\ngo versionCreate a new site\nhugo new site sitename cd sitenameInitialize your site as a module\nhugo mod init sitenameConfirm\ncat go.modAdd the module as a dependency using it’s git link\nhugo mod get github.com/McShelby/hugo-theme-relearnConfirm\ncat go.modadd the theme to config.toml\n# add this line to config.toml and save theme = [\"github.com/McShelby/hugo-theme-relearn\"]Confirm by viewing site\nhugo serve # visit browser at http://localhost:1313/ to view siteAdding a new “chapter” page",
    "tags": [],
    "title": "How to Set Up Hugo Relearn Theme",
    "uri": "/tools/how-to-set-up-hugo-relearn-theme/"
  },
  {
    "breadcrumb": "Networking",
    "content": " It took me a whopping 2 years to finish my CCNA! I kept giving up and quitting my studies for months at a time. Why? Because I couldn’t remember the massive amount of content covered in the CCNA. It felt hopeless. I could have done it in 6 month (or faster) if I knew how to study.\nI hadn’t taken a test in 10 years before this. So I had completely forgotten how to learn. This post is about the mistakes I made studying for the CCNA and how to avoid them.\nYou will also learn, as I did, about spaced repetition. I’ve also included a 6 month CCNA spaced repetition calendar.\nMy Mistakes, So You Don’t Make Them Mistake #1 Didn’t start flashcards until the final 30 days I wish I would have started flashcards from day 1. This would have helped a crap ton. Remembering all of the little details is not only useful for taking the test. It embeds the concepts in your brain and keeps you processing how things work .\nIf there is anything you take from this list. You should definitely be doing some flashcards every day.\nMistake #2 Not enough labs as I went. While studying the OCG and video courses. I did some labs. But I also skipped a ton of labs because it wasn’t convenient at the time. Then I was forced to lab every single topic in the final 30 days. A lot of cramming was done..\nMake sure to do all of the labs as you go. Make up your own labs as well. This is very important to building job worthy skills.\nMistake #3 Didn’t have a plan or stick with it. When your plan consists of, “just read everything and watch the videos and take the test when you feel ready”, you tend to procrastinate and put things off. Make a study schedule and a solid plan. (See below)\nHaving a set date for when you will take the test was pretty motivating. I did not find this out until about 30 days until my test.\nSpaced Repetition If you are using Anki flashcards for your studies, you may already be using spaced repetition. Spaced repetition is repeatedly reviewing with the time in between reviews getting longer each time you review it.\nHere is an excellent article about our learning curves and why spaced repetition helps us remember things https://fs.blog/spacing-effect/\nHow to set up a spaced repetition calendar for CCNA. Step 1. Plan how long your studies will take\nFigure out how long you need. It usually takes around 240 hours of studying for CCNA. (Depending on experience). Then figure out how many hours per day that you can spend on studying. This example is based on a 6 month study calendar.\nYou can use this 6 month excel calendar to plan and track your progress. You. can still use this method If you have already been studying CCNA. Just edit your calendar for how much time you have left.\nThe calendar is also based on Wendel Odom’s Official Cert Guide. You will also want to mix your other resources into your reviews.\nDecide what your review sessions will be\nPlan to review each chapter 3-4 times. here is what I did for review sessions to pass the exam.\nReview 1 Read and highlight (and flashcards)\nRead the chapter. Highlight key information that you want to remember. Do a lab for the material you studied (if applicable) Answer DIKTA questions Start Chapter 1 Anki Flascards Review 2 Copy highlights over to OneNote (keep doing flashcards)\nCopy your highlights over to OneNote. (using copy and paste if you have the digital book) Read your highlights and make sure you understand everything. lab and continue doing flashcards. (just go through Anki suggested flashcards, not just ones for the specific chapter.) Review 3 Labs and Highlight your notes (and flashcards)\nMore labs!\nGo over your notes. Color coding everything. (You can find my jumbled note mess here)\nGreen: Read again\nTeal: Very important Learn this/ lab it.\nRed/ purple: make extra flashcards out of this.\nReview 4 Practice questions and review\nGo through and answer the DIKTA questions again. Review any missed answers. Lab anything you aren’t quite sure of. The final 30 days I HIGHLY recommend Boson ExSim for your final 30 days of studying. ExSim comes with 3 exams (A,B, and C). Start with exam A in test simulation mode. Leave about a week in between each practice exam so you can go over your answers and Boson’s explanations for each answer.\nOne week before your test, (after you’ve completed exams A,B, and C). Do a random exam. Make sure you do the timed version that don’t show your score as you go.\nYou should be scoring above 900 by your 3rd and 4th exam if you have been reviewing Boson’s answer explanations.\nSchedule your exam\nPearson view didn’t let me schedule the exam past 30 days out from when I wanted to take it. I’m not sure if this is the case all the time. But by the time you are 30 days out you should have your test scheduled. This will light the fire under you. Great motivation for the home stretch.\nIf your exam is around June during Cisco Live, Cisco usually offers a 50% discount for an exam voucher. You probably won’t find any other discounts unless you pay for Cisco’s specific CCNA training.\nFinal word on labs You can technically pass the CCNA without doing many labs. But this will leave you at a HUGE disadvantage in the job market. Labs are crucial for really understanding networking. Knowing your way around the CLI and being able to troubleshoot networking issues will make you stand out from those who crammed for the exam.\nIf you’ve made it this far I really appreciate you taking the time to read this post. I really hope it helps at least one person.",
    "description": " It took me a whopping 2 years to finish my CCNA! I kept giving up and quitting my studies for months at a time. Why? Because I couldn’t remember the massive amount of content covered in the CCNA. It felt hopeless. I could have done it in 6 month (or faster) if I knew how to study.",
    "tags": [],
    "title": "How to Study for CCNA 200-301",
    "uri": "/networking/how-to-study-for-ccna-200-301/"
  },
  {
    "breadcrumb": "Linux",
    "content": " Here are my notes from Asghar Gori’s RHCSA book. Buy the book or read the reviews here.\nTrack my RHCSA progress: RHCSA Study Tracker\nInstallation Interaction File Management Advanced File Management Basic User Management Advanced User Management Bash Process and Task Scheduling Basic Package Management Advanced Package Management Boot Process, Grub2, and Kernel System Initialization, Message Logging, and System Tuning Storage Management Local File Systems and Swap Networking Network Devices and Network Connections Network File System (NFS) DNS and Time Synchronization The Secure Shell Service The Linux Firewall Security Enhanced Linux Shell Scripting Containers Sample Exam 1 Sample exam 2 Sample Exam 3 Sample Exam 4 Extra Resourses Using Man Pages RHCSA Exam Environment ",
    "description": " Here are my notes from Asghar Gori’s RHCSA book. Buy the book or read the reviews here.\nTrack my RHCSA progress: RHCSA Study Tracker\nInstallation Interaction File Management Advanced File Management Basic User Management Advanced User Management Bash Process and Task Scheduling Basic Package Management Advanced Package Management Boot Process, Grub2, and Kernel System Initialization, Message Logging, and System Tuning Storage Management Local File Systems and Swap Networking Network Devices and Network Connections Network File System (NFS) DNS and Time Synchronization The Secure Shell Service The Linux Firewall Security Enhanced Linux Shell Scripting Containers Sample Exam 1 Sample exam 2 Sample Exam 3 Sample Exam 4 Extra Resourses Using Man Pages RHCSA Exam Environment ",
    "tags": [],
    "title": "My RHCSA 9 Notes",
    "uri": "/linux/rhcsa-notes/"
  },
  {
    "breadcrumb": "Python",
    "content": "Expressions consist of values (such as 2) and operators (such as +), and they can always evaluate (that is, reduce) down to a single value.\nA single value with no operators is also considered an expression, though it evaluates only to itself, as shown here:\n2\n2\nTable 1-1: Math Operators from Highest to Lowest Precedence\nOperator\nOperation\nExample\nEvaluates to . . .\n**\nExponent\n2 ** 3\n8\n%\nModulus/remainder\n22 % 8\n6\n//\nInteger division/floored quotient\n22 // 8\n2\n/\nDivision\n22 / 8\n2.75\nMultiplication\n3 * 5\n15\nSubtraction\n5 - 2\n3\nAddition\n2 + 2\n4\nWhitespace in between the operators and values doesn’t matter for Python (except for the indentation at the beginning of the line), but a single space is convention",
    "description": "Expressions consist of values (such as 2) and operators (such as +), and they can always evaluate (that is, reduce) down to a single value.\nA single value with no operators is also considered an expression, though it evaluates only to itself, as shown here:\n2\n2\nTable 1-1: Math Operators from Highest to Lowest Precedence\nOperator\nOperation\nExample\nEvaluates to . . .\n**\nExponent\n2 ** 3\n8\n%\nModulus/remainder\n22 % 8\n6\n//\nInteger division/floored quotient",
    "tags": [],
    "title": "Python Basics",
    "uri": "/python/basics/"
  },
  {
    "breadcrumb": "Linux",
    "content": " We are going to use Vagrant to set up two RHEL 8 servers with some custom configuration options. I will include some helpful Vagrant commands at the end if you get stuck.\nIn this guide, I will be using Fedora 38 as my main operating system. I use Fedora because it is similar in features to Red Hat Linux Distributions. This will give me even more practice for the RHCSA exam as I use it in day-to-day operations.\nNote, if you are using Windows, you will need to install ssh. This can be done by installing Git. Which automatically installs ssh for you.\nYou will also need to have the latest version of Virtualbox installed.\nHere are the steps: Download and install Vagrant Make a new directory for your vagrant lab to live in Add the vagrant box Install the Vagrant disk size plugin Initialize the Vagrant box and Edit the Vagrant file Bring up the Vagrant box 1. Download and install Vagrant. In Fedora, this is very easy. Run the following command to download and install Vagrant:\nsudo dnf install vagrant\n2. Make a new directory for your vagrant lab to live in. Make your vagrant directory and make it your current working directory:\ncd Vagrant Add the Vagrant box. vagrant box add generic/rhel8\nInstall the Vagrant disk size plugin. The disk size program will help us set up custom storage sizes. Since we will be re-partitioning storage, this is a useful feature.\nvagrant plugin install vagrant-disksize\nInitialize the Vagrant box and edit the Vagrant file. First, initialize the Vagrant box in the vagrant directory: vagrant init generic/rhel8\nAfter completion, there will now be a file called “Vagrantfile” in your current directory. Since Vim is on the RHCSA exam, it’s wise to practice with it whenever you can. So let’s open the file in Vim:\nvim Vagrantfile\nYou will see a bunch of lines commented out, and a few lines without comments. Go ahead and comment out everything and paste this at the end of the file:\nVagrant.configure(\"2\") do |config config.vm.box = \"generic/rhel8\" config.vm.define \"server1\" do |server1| server1.vm.hostname = \"server1.example.com\" server1.vm.network \"private_network\", ip: \"192.168.2.110\" config.disksize.size = '10GB' end config.vm.define \"server2\" do |server2| server2.vm.hostname = \"server2.example.com\" server2.vm.network \"private_network\", ip: \"192.168.2.120\" config.disksize.size = '16GB' end config.vm.provider \"virtualbox\" do |vb| vb.memory = \"2048\" end end|The configuration file is fairly self-explanatory. Save Vagrantfile and exit Vim. Then, create /etc/vbox/networks.conf and add the following:\n* 10.0.0.0/8 192.168.0.0/1 * 2001::/646This will allow you to be more flexible with what network addresses can be used in VirtualBox.\nBring up the Vagrant box. Now, we bring up the Vagrant box. This will open two Virtual machines in Virtualbox named server1 and server2 in headless mode (there is no GUI).\nvagrant up\nGreat! Now we can use Vagrant to ssh into server1:\nvagrant ssh server 1\nFrom server1 ssh into server2 using its IP address:\n[vagrant@server1 ~]$ ssh 192.168.2.120\nNow you are in and ready to stir things up. The last thing you need is some commands to manage your Vagrant machines.\nHelpful Vagrant commands. Shut down Vagrant machines:\nvagrant halt Suspend or resume a machine:\nvagrant suspend vagrand resumeRestart a virtual machine:\nvagrant reload\nDestroy a Vagrant machine:\nvagrant destroy [machine-name]\nShow running VMs:\nvagrant status\nList other Vagrant options:\nvagrant\nIf you are going for RHCSA, there is no doubt that you will also use Vagrant sometime in the future. And as you can see, it’s pretty quick and simple to get started.\nFeel free to reach out with questions.",
    "description": " We are going to use Vagrant to set up two RHEL 8 servers with some custom configuration options. I will include some helpful Vagrant commands at the end if you get stuck.\nIn this guide, I will be using Fedora 38 as my main operating system. I use Fedora because it is similar in features to Red Hat Linux Distributions. This will give me even more practice for the RHCSA exam as I use it in day-to-day operations.",
    "tags": [],
    "title": "RHCSA Vagrant Lab Setup",
    "uri": "/linux/rhcsa-vagrant-lab-setup/"
  },
  {
    "breadcrumb": "Tools",
    "content": "This is a step-by-step guide to setting up Nextcloud on a Debian server. You will need a server hosted by a VPS like Vultr. And a Domain hosted by a DNS provider such as Cloudflare\nWhat is Nextcloud? Nextcloud is so many things. It offers so many features and options, it deserves a bulleted list:\nFree and open source Cloud storage and syncing Email client Custom browser dashboard with widgets Office suite RSS newsfeed Project organization (deck) Notebook Calender Task manager Connect to decentralized social media (like Mastodon) Replacement for all of google’s services Create web forms or surveys It is also free and open source. This mean the source code is available to all. And hosting yourself means you can guarantee that your data isn’t being shared.\nAs you can see. Nextcloud is feature packed and offers an all in one solution for many needs. The set up is fairly simple!\nInstall Dependencies sudo apt update Sury Dependencies sudo apt install software-properties-common ca-certificates lsb-release apt-transport-https Enable Sury Repository sudo sh -c 'echo \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" \u003e /etc/apt/sources.list.d/php.list' Import the GPG key for the repository wget -qO - https://packages.sury.org/php/apt.gpg | sudo apt-key add - Install PHP 8.2 https://computingforgeeks.com/how-to-install-php-8-2-on-debian/?expand_article=1 (This is also part of the other dependencies install command below)\nsudo apt install php8.2 Install other dependencies: apt install -y nginx python3-certbot-nginx mariadb-server php8.2 php8.2-{fpm,bcmath,bz2,intl,gd,mbstring,mysql,zip,xml,curl}Improving Nextcloud server performance Adding more child processes for PHP to use:\nvim /etc/php/8.2/fpm/pool.d/www.conf # update the following parameters in the file pm = dynamic pm.max_children = 120 pm.start_servers = 12 pm.min_spare_servers = 6 pm.max_spare_servers = 18Start your MariaDB server: systemctl enable mariadb --nowSet up a SQL Database Nextcloud needs some tables setup in order to store information in a database. First set up a secure sql database:\nmysql_secure_installationSay “Yes” to the prompts and enter root password:\nSwitch to unix_socket authentication [Y/n]: Y Change the root password? [Y/n]: Y\t# enter password. Remove anonymous users? [Y/n]: Y Disallow root login remotely? [Y/n]: Y Remove test database and access to it? [Y/n]: Y Reload privilege tables now? [Y/n]: YSign in to your SQL database with the password you just chose:\nmysql -u root -pCreating a database for NextCloud While signed in with the mysql command, enter the commands below one at a time. Make sure to replace the username and password. But leave localhost as is:\nCREATE DATABASE nextcloud; GRANT ALL ON nextcloud.* TO 'username'@'localhost' IDENTIFIED BY 'password'; FLUSH PRIVILEGES; EXIT;Install SSL with Certbot Obtain an SSL certificate. See my website setup post for information about Certbot and nginx setup.\ncertbot certonly --nginx -d nextcloud.example.comCreate a CNAME record for DNS. You will need to have a domain name set up for your server. I use Cloudflare to manage my DNS records. You will want to make a CNAME record for your nextcloud subdomain.\nJust add “nextcloud” as the name and “yourwebsite.com” as the content. This will make it so “nextcloud.yourwebsite.com”. Make sure to select “DNS Only” under proxy status.\nNginx Setup Edit your sites-available config at /etc/nginx/sites-available/nextcloud. See comments in the following text box:\nvim /etc/nginx/sites-available/nextcloud # Add this to the file: # replace example.org with your domain name # use the following vim command to make this easier # :%s/example.org/perfectdarkmode.com/g # ^ this will replace all instances of example.org with perfectdarkmode.com. Replace with yur domain upstream php-handler { server unix:/var/run/php/php8.2-fpm.sock; server 127.0.0.1:9000; } map $arg_v $asset_immutable { \"\" \"\"; default \"immutable\"; } server { listen 80; listen [::]:80; server_name nextcloud.example.org ; return 301 https://$server_name$request_uri; } server { listen 443 ssl http2; listen [::]:443 ssl http2; server_name nextcloud.example.org ; root /var/www/nextcloud; ssl_certificate /etc/letsencrypt/live/nextcloud.example.org/fullchain.pem ; ssl_certificate_key /etc/letsencrypt/live/nextcloud.example.org/privkey.pem ; client_max_body_size 512M; client_body_timeout 300s; fastcgi_buffers 64 4K; gzip on; gzip_vary on; gzip_comp_level 4; gzip_min_length 256; gzip_proxied expired no-cache no-store private no_last_modified no_etag auth; gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/wasm application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy; client_body_buffer_size 512k; add_header Referrer-Policy \"no-referrer\" always; add_header X-Content-Type-Options \"nosniff\" always; add_header X-Download-Options \"noopen\" always; add_header X-Frame-Options \"SAMEORIGIN\" always; add_header X-Permitted-Cross-Domain-Policies \"none\" always; add_header X-Robots-Tag \"none\" always; add_header X-XSS-Protection \"1; mode=block\" always; fastcgi_hide_header X-Powered-By; index index.php index.html /index.php$request_uri; location = / { if ( $http_user_agent ~ ^DavClnt ) { return 302 /remote.php/webdav/$is_args$args; } } location = /robots.txt { allow all; log_not_found off; access_log off; } location ^~ /.well-known { location = /.well-known/carddav { return 301 /remote.php/dav/; } location = /.well-known/caldav { return 301 /remote.php/dav/; } location /.well-known/acme-challenge { try_files $uri $uri/ =404; } location /.well-known/pki-validation { try_files $uri $uri/ =404; } return 301 /index.php$request_uri; } location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/) { return 404; } location ~ ^/(?:\\.|autotest|occ|issue|indie|db_|console) { return 404; } location ~ \\.php(?:$|/) { # Required for legacy support rewrite ^/(?!index|remote|public|cron|core\\/ajax\\/update|status|ocs\\/v[12]|updater\\/.+|oc[ms]-provider\\/.+|.+\\/richdocumentscode\\/proxy) /index.php$request_uri; fastcgi_split_path_info ^(.+?\\.php)(/.*)$; set $path_info $fastcgi_path_info; try_files $fastcgi_script_name =404; include fastcgi_params; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; fastcgi_param PATH_INFO $path_info; fastcgi_param HTTPS on; fastcgi_param modHeadersAvailable true; fastcgi_param front_controller_active true; fastcgi_pass php-handler; fastcgi_intercept_errors on; fastcgi_request_buffering off; fastcgi_max_temp_file_size 0; } location ~ \\.(?:css|js|svg|gif|png|jpg|ico|wasm|tflite|map)$ { try_files $uri /index.php$request_uri; add_header Cache-Control \"public, max-age=15778463, $asset_immutable\"; access_log off; # Optional: Don't log access to assets location ~ \\.wasm$ { default_type application/wasm; } } location ~ \\.woff2?$ { try_files $uri /index.php$request_uri; expires 7d; access_log off; } location /remote { return 301 /remote.php$request_uri; } location / { try_files $uri $uri/ /index.php$request_uri; } }Enable the site Create a link between the file you just made and /etc/nginx/sites-enabled\nln -s /etc/nginx/sites-available/nextcloud /etc/nginx/sites-enabled/Install Nextcloud Download the latest Nextcloud version. Then extract into /var/www/. Also, update the file’s permissions to give nginx access:\nwget https://download.nextcloud.com/server/releases/latest.tar.bz2 tar -xjf latest.tar.bz2 -C /var/www chown -R www-data:www-data /var/www/nextcloud chmod -R 755 /var/www/nextcloudStart and enable php-fpm on startup \u003csystemctl enable php8.2fpm --now](\u003e\u003c--may not need this. # Do need this-\u003e sudo systemctl enable php8.2-fpm.service --nowReload nginx systemctl reload nginxNextcloud occ tool Here is a built in Nextcloud tool just in case things break. Here is a guide on troubleshooting with occ. The basic command is as follows:\nsudo -u www-data php /var/www/nextcloud/occAdd this as an alias in ~/.bashrc for ease of use.\nYou are ready to log in to Nextcloud! Go to your nextcloud domain in a browser. In my case, I head to nextcloud.perfectdarkmode.com. Fill out the form to create your first Nextcloud user:\nChoose an admin username and secure password. Leave Data folder as the default value. For Database user, enter the user you set for the SQL database. For Database password, enter the password you chose for the new user in MariaDB. For Database name, enter: nextcloud Leave “localhost” as “localhost”. Click Finish. Now that you are signed in. Here are a few things you can do to start you off:\nDownload the desktop and mobile app and sync all of your data. (covered below) Look at different apps to consolodate your programs all in one place. Put the Nextcloud dashboard as your default browser homepage and customize themes. Set up email integration. NextCloud desktop synchronization Install the desktop client (Fedora)\nSudo dnf install nextcloudclientInstall on other distros: https://help.nextcloud.com/t/install-nextcloud-client-for-opensuse-arch-linux-fedora-ubuntu-based-android-ios/13657\nRun the nextcloud desktop app and sign in. Choose folders to sync. Folder will be ~/Nextcloud. Move everything into your nextcloud folder. This may break things with filepaths so beware. Now you are ready to use and explore nextcloud. Here is a video from TechHut to get you started down the NextCloud rabbit hole.\nChange max upload size (default is 500mg) /var/www/nextcloud/.user.ini php_value upload_max_filesize = 16G php_value post_max_size = 16G\nRemove file locks Put Nextcloud in maintenance mode: Edit config/config.php and change this line:\n'maintenance' =\u003e true,\nEmpty table oc_file_locks: Use tools such as phpmyadmin or connect directly to your database and run (the default table prefix is oc_, this prefix can be different or even empty):\nDELETE FROM oc_file_locks WHERE 1\ndisable maintenance mode (undo first step). Make sure your cron-jobs run properly (you admin page tells you when cron ran the last time): https://docs.nextcloud.org/server/13/admin_manual/configuration_server/background_jobs_configuration.html 2.7k mysql -u root -p MariaDB [(none)]\u003e use nextcloud; MariaDB [nextcloud]\u003e DELETE FROM oc_file_locks WHERE 1; *figure out redis install if this happens regularly* [https://docs.nextcloud.org/server/13/admin_manual/configuration_server/caching_configuration.html#id4 9.1k](https://docs.nextcloud.org/server/13/admin_manual/configuration_server/caching_configuration.html#id4)",
    "description": "This is a step-by-step guide to setting up Nextcloud on a Debian server. You will need a server hosted by a VPS like Vultr. And a Domain hosted by a DNS provider such as Cloudflare\nWhat is Nextcloud? Nextcloud is so many things. It offers so many features and options, it deserves a bulleted list:\nFree and open source Cloud storage and syncing Email client Custom browser dashboard with widgets Office suite RSS newsfeed Project organization (deck) Notebook Calender Task manager Connect to decentralized social media (like Mastodon) Replacement for all of google’s services Create web forms or surveys It is also free and open source. This mean the source code is available to all. And hosting yourself means you can guarantee that your data isn’t being shared.",
    "tags": [],
    "title": "Setting Up a Self-hosted NextCloud Server",
    "uri": "/tools/setting-up-a-self-hosted-nextcloud-server/"
  },
  {
    "breadcrumb": "",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tags",
    "uri": "/tags/"
  },
  {
    "breadcrumb": "Recipes",
    "content": "Marinade: 2 cups Liquid Amino 2 cups Water 2 tbsp Liquid Smoke 1/4 cup Maple Syrup 2 tsp Cumin 2 tsp Pepper 2 tsp Garlic Powder 2 tsp Smoked Paprika\nMarinate for 1 hour and place on parchment paper on baking sheet. Bake at 400 degrees for 25 minutes Save Marinade, good for 7 days.",
    "description": "Marinade: 2 cups Liquid Amino 2 cups Water 2 tbsp Liquid Smoke 1/4 cup Maple Syrup 2 tsp Cumin 2 tsp Pepper 2 tsp Garlic Powder 2 tsp Smoked Paprika\nMarinate for 1 hour and place on parchment paper on baking sheet. Bake at 400 degrees for 25 minutes Save Marinade, good for 7 days.",
    "tags": [],
    "title": "Tempeh Bacon",
    "uri": "/recipes/tempeh-bacon/"
  },
  {
    "breadcrumb": "Tools",
    "content": "Vagrant is software that lets you set up multiple, pre-configured virtual machines in a flash. I am going to show you how to do this using Linux and Virtual Box. But you can do this on MacOS and Windows as well.\nDownload Vagrant, VirtualBox and Git.\nVagrant link.\nVirtualbox link.\nYou may want to follow another tutorial for setting up VirtualBox.\nGit link.\nInstalling git will install ssh on windows. Which you will use to access your lab. Just make sure you select the option to add git and unit tools to your PATH variable.\nMake a Vagrant project folder.\nNote: All of these commands are going to be in a Windows command prompt.\nmkdir vagranttestMove in to your new directory.\ncd vagranttestAdd and Initialize Your Vagrant Project.\nYou can find preconfigured virtual machines here.\nWe are going to use ubuntu/trusty64.\nAdd the Vagrant box\nvagrant box add ubuntu/trusty64Initialize your new Vagrant box\nvagrant init ubuntu/trusty64Use the dir command to see the contents of this directory.\nWe are going to edit this Vagrantfile to set up our multiple configurations.\nvim VagrantfileHere is the new config without all of the commented lines. Add this (minus the top line) under Vagrant.configure(“2”) do |config|.\nVagrant.configure(\"2\") do |config| config.vm.box = \"ubuntu/trusty64\" config.vm.define \"server1\" do |server1| server1.vm.hostname = \"server1\" server1.vm.network \"private_network\", ip: \"10.1.1.2\" end config.vm.define \"server2\" do |server2| server2.vm.hostname = \"server2\" server2.vm.network \"private_network\", ip: \"10.1.1.3\" end endNow save your Vagrant file in Vim.\nBring up your selected vagrant boxes:\nvagrant upNow if you open virtual box, you should see the new machines running in headless mode. This means that the machines have no user interface..\nSsh into server1\nvagrant ssh server1You are now in serve1’s terminal.\nFrom server1, ssh into server2\nssh 10.1.1.3Success! You are now in server2 and can access both machines from your network. Just enter “exit” to return to the previous terminal.\nAdditional Helpful Vagrant Commands.\nWithout the machine name specified, vagrant commands will work on all virtual machines in your vagrant folder. I’ve thrown in a couple examples using [machine-name] at the end.\nShut down Vagrant machines\nvagrant haltShut down only one machine\nvagrant halt [machine-name]Suspend and resume a machine\nvagrant suspendvagrant resumeRestart a virtual machine\nvagrant reloadDestroy a virtual machine\nvagrant detstroy [machine-name]Show running vms\nvagrant statusList Vagrant options\nvagrantPlayground for future labs\nThis type of deployment is going to be the bedrock of many Linux and Red Hat labs. You can easily use pre-configured machines to create a multi-machine environment. This is also a quick way to test your network and server changes without damaging anything.\nNow go set up a Vagrant lab yourself and let me know what you plan to do with it!\nWhat is Vagrant? Easy to configure, reproducible environments Provisions virtualbox vms Vagrant box: OS image Syntax:\nvagrant box add user/boxAdd centos7 box\nvagrant box add jasonc/centos7Many public boxes to download\nVagrant project = folder with a vagrant file\nInstall Vagrant here: https://www.vagrantup.com/downloads\nMake a vagrant folder:\nmkdir vm1 cd vm1initialize vagrant project:\nvagrant init jasonc/centos7bring up all vms defined in the vagrant file)\nvagrant upvagrant will import the box into virtualbox and start it\nthe vm is started in headless mode\n(there is no user interfaces)\nVagrant up / multi machine\nBring up only one specific vm\nvagrant up [vm-name] SSH Vagrant\nvagrant ssh [vm_name] or vagrant ssh if there is only one vm in the vagrant file Need to download ssh for windows\ndownloading git will install this:\nhttps://desktop.github.com/\nShut down vagrant machines vagrant halt\nShutdown only one machine vagrant halt [vm]\nSaves present state of the machine\njust run vagrant up without having to import tha machines again\nSuspend the machine vagrant suspend [VM]\nResume vagrant resume [VM]\nDestroy VM vagrant destroy [VM]\nList options vagrant\nVagrant command works on the vagrant folder that you are in\nVagrant File\nVagrant.configure (2) do | config | config.vm.box = \"jasonc/centos7\" config.vm.hostname = \"linuxsvr1\" (default files) config.vm.network \"private_network\", ip: \"10.2.3.4\" config.vm.provider \"virtualbox\" do | vbi vb.gui = true vb.memory = \"1024\" (shell provisioner) config.vm.provision \"shell\", path: \"setup.sh\" end endConfiguring a multi machine setup:\nSpecify common configurations at the top of the file\nVagrant.configure (2) do | config | config.vm.box = \"jasonc/centos7\" config.vm.define = \"server1\" do | server1 | server1.vm.hostname = \"server1\" server1.vm.network \"private_network\", ip: \"10.2.3.4\" end config.vm.define = \"server2\" do | server2 | server2.vm.hostname = \"server2\" server2.vm.network \"private_network\", ip: \"10.2.3.5\" end endYou can search for vagrant boxes at https://app.vagrantup.com/boxes/search\nCourse software downloads: http://mirror.linuxtrainingacademy.com/\nInstall Git: https://git-scm.com/download/win\nmake sure to check option for git and unit tools to be added to the PATH vagrant ssh\nto connect to the vagrant machine in the folder that you are in default password in vagrant tyoe ’exit to return to prompt vagrant halt\nstop the vm and save it’s current state vagrant reload\nrestarts the vm vagrant status\nshows running vms in that folder You can access files in the vagrant directory from both VMs\nExample RHEL8 Config Vagrant.configure(\"2\") do |config| config.vm.box = \"generic/rhel8\" config.vm.define \"server1\" do |server1| server1.vm.hostname = \"server1.example.com\" server1.vm.network \"private_network\", ip: \"192.168.1.110\" config.disksize.size = '10GB' end config.vm.define \"server2\" do |server2| server2.vm.hostname = \"server2.example.com\" server2.vm.network \"private_network\", ip: \"192.168.1.120\" config.disksize.size = '16GB' end config.vm.provider \"virtualbox\" do |vb| vb.memory = \"2048\" end endPlugin to change the disk size:\nvagrant plugin install vagrant-disksize",
    "description": "Vagrant is software that lets you set up multiple, pre-configured virtual machines in a flash. I am going to show you how to do this using Linux and Virtual Box. But you can do this on MacOS and Windows as well.\nDownload Vagrant, VirtualBox and Git.\nVagrant link.\nVirtualbox link.\nYou may want to follow another tutorial for setting up VirtualBox.\nGit link.\nInstalling git will install ssh on windows. Which you will use to access your lab. Just make sure you select the option to add git and unit tools to your PATH variable.",
    "tags": [],
    "title": "Using Vagrant on Linux",
    "uri": "/tools/using-vagrant-on-linux/"
  },
  {
    "breadcrumb": "Recipes",
    "content": " Super firm tofu\nRough chop tofu\nMarinade: 2 Tbsp soy sauce 2 Tbsp Nooch 1 tsp chilli powder 1/2 tsp garlic powder 1/2 tsp onion powder 1/2 tsp smoked paprika or chipotle powder 1/2 tsp cumin 1/2 tsp oregano 1/4 tsp ground coriander 1 tbsp taco bell hot sauce 2 tbsp vegan mayo 1 tbsp water Mix and blend marinade ingredients Add in chopped tofu and mix let it sit for 30 minutes\nCook tofu\nadd some oil and cook on griddle Creamy Jalepeno Sauce\nCook:\nOil pan and heat \u003e coat the tortilla in it by smearing it around add vegan moz and cheddar shreds and the tofu and some creamy jalepeno sauce\n1/2 cup cheese and 1/2 cup tofu let some cheeze sneak out",
    "description": " Super firm tofu\nRough chop tofu\nMarinade: 2 Tbsp soy sauce 2 Tbsp Nooch 1 tsp chilli powder 1/2 tsp garlic powder 1/2 tsp onion powder 1/2 tsp smoked paprika or chipotle powder 1/2 tsp cumin 1/2 tsp oregano 1/4 tsp ground coriander 1 tbsp taco bell hot sauce 2 tbsp vegan mayo 1 tbsp water Mix and blend marinade ingredients Add in chopped tofu and mix let it sit for 30 minutes",
    "tags": [],
    "title": "Vegan Tofu Quesadilla",
    "uri": "/recipes/vegan-tofu-quesadilla/"
  }
]
